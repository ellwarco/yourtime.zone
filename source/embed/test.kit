<!DOCTYPE html>
<html>

<head>
	<script src="/__js/embed.min.js"></script>
	<title>yourtime.zone</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
	<link rel="manifest" href="/manifest.json">
	<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#f5ce7e">
	<meta name="theme-color" content="#ffffff">
	<link rel="stylesheet" type="text/css" href="../__css/embed.css" />
</head>

<body>

	<span><span id="6220d81b78-eventname"></span> <span id="6220d81b78-eventverb">starts</span><span id="6220d81b78-eventpreposition"> on</span></span>
	<h1 id="6220d81b78-localtime"></h1> <span>In your timezone (<span id="6220d81b78-localtimezone"></span>)</span>

	<script>
		//embedcode template

		function embed6220d81b78(displaytitle, displaydate, EventSerialized) {
			var UserTimeZoneDisplay = NameUserTimezone();
			document.getElementById("6220d81b78-localtimezone").innerHTML = UserTimeZoneDisplay;
			var Event = deparam(EventSerialized);

			var EventTime = moment(Event.timeUTC);
			var UserTimeZone = moment.tz.guess();
			var ConvertedEventTime = EventTime.tz(UserTimeZone).format(); // 2013-11-18T06:00:00+01:00

			//if the result starts with a date set preposition to 'on'
			EventStartWithDate = DoesEventStartWithDate(EventTime);
			if (EventStartWithDate) {
				document.getElementById("6220d81b78-eventpreposition").innerHTML = " on";
			}

			//if the result is in the past, use "was" instead of "is"
			var IsEventInPast = CheckIsEventInPast(EventTime);

			if (IsEventInPast) {
				document.getElementById("6220d81b78-eventverb").innerHTML = "started";
			}

			var HumanLanguageConvertedEventTime = '';

			if (displaydate) {
				HumanLanguageConvertedEventTime = moment(ConvertedEventTime).calendar(null, {
					sameDay: "[Today at] h:mm A",
					nextDay: "[Tomorrow at] h:mm A",
					nextWeek: "dddd [at] h:mm A",
					withinthenext200Days: "MMMM Do [at] h:mm A",
					lastDay: "[Yesterday at] h:mm A",
					lastWeek: "[Last] dddd [at] h:mm A",
					withinthelast200Days: "MMMM Do [at] h:mm A",
					sameElse: "MMMM Do YYYY [at] h:mm A"
				});
			} else {
				HumanLanguageConvertedEventTime = moment(ConvertedEventTime).format('hA');
				document.getElementById("6220d81b78-eventpreposition").innerHTML = " at";
			}

			if (displaytitle) {
				document.getElementById("6220d81b78-eventname").innerHTML = Event.Title;
				if (Event.Title == null || Event.Title == '') {
					console.log("It appears that there is not a valid title");
					document.getElementById("6220d81b78-eventname").innerHTML = "the event";
				}
			} else {
				document.getElementById("6220d81b78-eventname").innerHTML = '';
				document.getElementById("6220d81b78-eventverb").innerHTML = '';
				document.getElementById("6220d81b78-eventpreposition").innerHTML = '';
			}

			document.getElementById("6220d81b78-localtime").innerHTML = HumanLanguageConvertedEventTime;

		}
	</script>








	<script type="text/javascript">
		var displaytitle = true;
		var displaydate = true;
		var EventSerialized = "timeUTC=2017-12-12T16%3A00%3A00.000Z&Title=Time%20Mastery%20Webinar";
		embed6220d81b78(displaytitle, displaydate, EventSerialized);
	</script>
</body>

</html>
